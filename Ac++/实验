#include<iostream>
#include<string>
using namespace std;
int main()
{
	char s[10][10];
	int n;
	string bin[10],oct[10];
	cin>>n;
	for(int j=0;j<n;j++)
	for(int i=0;i<n;i++)
	{
		cin>>s[i][j];
}
	for(int j=0;j<n;j++)
	for(int i=0;i<n;i++)
	{
		switch(s[i][j]){
case '0':
bin[i]+="0000";
break;
case '1':
bin[i]+="0001";
break;
case '2':
bin[i]+="0010";
break;
case '3':
bin[i]+="0011";
break;
case '4':
bin[i]+="0100";
break;
case '5':
bin[i]+="0101";
break;
case '6':
bin[i]+="0110";
break;
case '7':
bin[i]+="0111";
break;
case '8':
bin[i]+="1000";
break;
case '9':
bin[i]+="1001";
break;
case 'A':
bin[i]+="1010";
break;
case 'B':
bin[i]+="1011";
break;
case 'C':
bin[i]+="1100";
break;
case 'D':
bin[i]+="1101";
break;
case 'E':
bin[i]+="1110";
break;
case 'F':
bin[i]+="1111";
break;
default:
break;
}
}
for(int i=0;i<n;i++)
cout<<bin[i]<<endl;
	int temp=0,sum=0;
long length;
for(int i=0;i<n;i++){//2进制转换8进制 
length=bin[i].size()-1;//得到它的大小;
while(bin[i][length]&&length>=0){
temp=3;
while(temp--&&length>=0){
if('1'==bin[i][length])
switch(temp){
case 2:
sum+=1;
break;
case 1:
sum+=2;
break;
case 0:
sum+=4;
break;
default:
break;
}
length--; 
}
oct[i]+=(sum+'0');
sum=0;

}
//cout<<oct[i]<<endl;
}
for(int i=0;i<n;i++){//逆输出 
int flag=1;
length=oct[i].size()-1;
while(length>=0){
while('0'==oct[i][length]&&flag==1)//去除前面的零 
{
length--;
}
flag=0;
cout<<oct[i][length];
length--;
}
cout<<endl;
}
return 0;
}